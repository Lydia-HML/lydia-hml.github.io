GitHub Pages Deployment Guide
===============================

This document provides detailed steps for deploying this project to GitHub Pages.

Prerequisites
------------
1. You need a GitHub account
2. Git must be installed in your local environment
3. Node.js and npm must be installed in your local environment

Deployment Steps
---------------

1. Clone the project locally
   ```
   # Clone this project to your local machine
   git clone https://github.com/Lydia-HML/Lydia-Portfolio.git
   cd Lydia-Portfolio
   ```

2. Install dependencies
   ```
   npm install
   ```

3. Modify package.json
   Add the following deployment commands to the "scripts" section of your package.json file:
   ```
   "scripts": {
     "dev": "tsx server/index.ts",
     "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
     "start": "NODE_ENV=production node dist/index.js",
     "check": "tsc",
     "db:push": "drizzle-kit push",
     "predeploy": "npm run build && node github-pages-deploy.js",
     "deploy": "gh-pages -d github-pages"
   }
   ```

4. Run the deployment command
   You can deploy using one of two methods:

   Option 1: Using npm deploy command
   ```
   npm run deploy
   ```

   This command will automatically execute the following steps:
   - Build the application (npm run build)
   - Run the GitHub Pages deployment configuration script (node github-pages-deploy.js)
   - Deploy to GitHub Pages using gh-pages

   Option 2: Using the deployment script
   ```
   bash deploy-to-github.sh
   ```

   This script executes the same steps but provides more detailed output.

5. View your website
   After deployment is complete, your website will be accessible at:
   ```
   https://lydia-hml.github.io/Lydia-Portfolio
   ```

   If you have configured a custom domain, it can be accessed through your custom domain.

Custom Domain Configuration
--------------------------
If you want to use a custom domain, follow these steps:

1. Add a CNAME record with your DNS provider pointing to `lydia-hml.github.io`
2. In your GitHub repository settings, navigate to the "Pages" option
3. Enter your domain in the "Custom domain" section
4. Click "Save"

GitHub will automatically create a CNAME file in your repository.

Deployment Notes
---------------
1. Ensure your Git configuration is correctly set up with your username and email
2. If this is the first deployment, you may need to enable GitHub Pages in your GitHub repository settings
3. By default, the site will be served from the `gh-pages` branch, make sure not to delete this branch
4. Deployment may take a few minutes to take effect

Troubleshooting Common Issues
----------------------------
Deployment Failures:
If the deployment fails, check the following:
- Ensure you have the correct repository access permissions
- Make sure Git is configured correctly with your username and email
- Check for any build errors

Routing Issues:
If you experience routing issues after deployment (e.g., 404 errors when refreshing the page), ensure:
- Your application is using HashRouter or properly configured BrowserRouter
- The `404.html` file is correctly configured
- The redirect script in `index.html` is properly implemented

Further Help
-----------
If you encounter any issues during the deployment process, refer to these resources:
- GitHub Pages official documentation: https://docs.github.com/en/pages
- gh-pages npm package documentation: https://www.npmjs.com/package/gh-pages